from Products.DataCollector.plugins.CollectorPlugin import (CollectorPlugin, SnmpPlugin, PythonPlugin)


class Check_NRPE(PythonPlugin):
    relname = 'nrpeComponents'
    modname = 'ZenPacks.Secure24.Check_NRPE.nrpeComponent'

    # Define default check_nrpe checks used by Secure-24
    # These checks will be added to the device.
    nrpeCmdTableMaps = {}
    nrpeCmdTableMaps[0] = {
        'os': "windows",
        'title': 'Physical Memory Usage',
        'nrpe_cmd': 'CheckMem',
        'nrpe_args': 'ShowAll type=physical',
        'nrpe_timeout': 30,
        'nrpe_cycle': 5,
        'nrpe_retries': 3
        }

    nrpeCmdTableMaps[1] = {
        'os': "windows",
        'title': 'CPU Usage',
        'nrpe_cmd': 'CheckCPU',
        'nrpe_args': 'time=15m time=5m time=1m ShowAll',
        'nrpe_timeout': 30,
        'nrpe_cycle': 5,
        'nrpe_retries': 3
        }

    nrpeCmdTableMaps[2] = {
        'os': "linux",
	'title': 'DNS Lookups',
	'nrpe_cmd': 'check_dns_lookups',
	'nrpe_args': '""',
	'nrpe_timeout': 30,
	'nrpe_cycle': 5,
	'nrpe_retries': 3
        }

    nrpeCmdTableMaps[3] = {
        'os': "linux",
	'title': 'Read Only Mounts',
	'nrpe_cmd': 'nrpe-check_ro-mounts',
	'nrpe_args': None,
	'nrpe_timeout': 30,
	'nrpe_cycle': 5,
	'nrpe_retries': 3
        }

    nrpeCmdTableMaps[4] = {
        'os': "linux",
	'title': 'LDAP Connectivity',
	'nrpe_cmd': 'check_ldap_lookups',
	'nrpe_args': None,
	'nrpe_timeout': 30,
	'nrpe_cycle': 5,
	'nrpe_retries': 3
        }

    nrpeCmdTableMaps[5] = {
        'os': "linux",
	'title': 'NTP Offset',
	'nrpe_cmd': 'check_ntp_offset',
	'nrpe_args': None,
	'nrpe_timeout': 30,
	'nrpe_cycle': 5,
	'nrpe_retries': 3
        }


    def collect(self, device, log):
        print nrpeCmdTableMaps
        return nrpeCmdTableMaps


    def process(self, device, results, log):
#        import pdb; pdb.set_trace()
	self.device = device

	if "linux" in lower(self.device.getDeviceClassName()):
            device_os = "linux"
        elif "windows" in lower(self.device.getDeviceClassName()):
            device_os = "windows"
        else:
            device_os = "unknown"
            log.warn('Unable to determine OS. Skipping...')

        rm = self.relMap()
        for cmd_index in nrpeCmdTableMaps:
            if nrpeCmdTableMaps[cmd_index]['os'] is not device_os:
                continue
            else:
                om = self.objectMap()
                om.title = nrpeCmdTableMaps[cmd_index]['title']
                om.nrpe_cmd = nrpeCmdTableMaps[cmd_index]['nrpe_cmd']
                om.nrpe_args = nrpeCmdTableMaps[cmd_index]['nrpe_args']
                om.nrpe_timeout = nrpeCmdTableMaps[cmd_index]['nrpe_timeout']
                om.nrpe_cycle = nrpeCmdTableMaps[cmd_index]['nrpe_cycle']
                om.nrpe_retries = nrpeCmdTableMaps[cmd_index]['nrpe_retries']

            rm.append(om)
        import pdb; pdb.set_trace()
#	pdb.set_trace()
        return rm

